name: Flutter Build
on:
  pull_request:
    branches: ["main"]
    
env:
  flutter_version: "3.3.10"
  cargo_lipo: "cargo_lipo_v1"
  cargo_ndk: "cargo_ndk_v1"
  cargo_xcode: "cargo_xcode_v1"
  corrosion: "corrosion_v1"

jobs:
  # build-linux:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/cache@v3
  #       id: cache-deps
  #       with:
  #         path: |
  #           /opt/hostedtoolcache/flutter/
  #           /home/runner/.cargo/bin/
  #           /home/runner/.cargo/index/
  #           /home/runner/.cargo/cache/
  #           /home/runner/.cargo/git/db/
  #         key: ${{ runner.OS }}-cargo-install-cache-v1}}
  #     - uses: subosito/flutter-action@v2
  #       with:
  #         flutter-version: "3.3.10"
  #         channel: "stable"
  #     - name: Install Flutter build tools
  #       run: sudo apt update && sudo apt-get -y install clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev libglu1-mesa          
  #     - name: Setup | Rust
  #       uses: ATiltedTree/setup-rust@v1
  #       with:
  #         rust-version: stable
  #         components: clippy
  #     - uses: actions/checkout@v3
  #     - name: Install Corrosion
  #       run: |
  #         cd ..
  #         set -euxo pipefail
  #         git clone https://github.com/corrosion-rs/corrosion.git
  #         cmake -Scorrosion -Bbuild -DCMAKE_BUILD_TYPE=Release
  #         cmake --build build --config Release
  #         sudo cmake --install build --config Release
  #     - name: Clean & Get Flutter dependencies
  #       run: |
  #         flutter clean
  #         flutter pub get
  #     - name: build linux
  #       run: flutter build linux    

  # build-window:
  #   runs-on: windows-latest
  #   steps:
  #     - uses: actions/cache@v3
  #       id: cache-deps
  #       with:
  #         path: |
  #           C:\hostedtoolcache\windows\flutter
  #           C:\Users\runneradmin\.cargo\bin
  #         key: ${{ runner.OS }}-cargo-install-cache-v1}}
  #     - uses: actions/cache@v3
  #       id: corrosion
  #       with:
  #         path: |
  #           C:/Program Files (x86)/Corrosion/
  #         key: ${{ runner.OS }}-corrosion-cache-${{env.corrosion}}
  #     - uses: subosito/flutter-action@v2
  #       with:
  #         flutter-version: "3.3.10"
  #         channel: "stable"
  #     - name: Setup | Rust
  #       uses: ATiltedTree/setup-rust@v1
  #       with:
  #         rust-version: stable
  #         components: clippy
  #     - uses: actions/checkout@v3
  #     - name: Install Corrosion
  #       if: steps.corrosion.outputs.cache-hit != 'true'
  #       run: |
  #         cd ..
  #         ls
  #         git clone https://github.com/corrosion-rs/corrosion.git
  #         cmake -Scorrosion -Bbuild -DCMAKE_BUILD_TYPE=Release
  #         cmake --build build --config Release
  #         cmake --install build --config Release
  #         echo "C:\Program Files (x86)\Corrosion" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
  #     - name: Clean & Get Flutter dependencies
  #       run: |
  #         flutter clean
  #         flutter pub get
  #     - name: build window
  #       run: flutter build windows

  # build-macos:
  #   runs-on: macos-latest
  #   steps:
  #     - uses: actions/cache@v3
  #       id: cache-deps
  #       with:
  #         path: |
  #           /Users/runner/hostedtoolcache/flutter
  #           ~/.cargo/bin/
  #           ~/.cargo/registry/index/
  #           ~/.cargo/registry/cache/
  #           ~/.cargo/git/db/
  #         key: ${{ runner.OS }}-cargo-install-cache-v1}}
  #     - uses: actions/cache@v3
  #       id: cargo-xcode
  #       with:
  #         path: |
  #           ~/.cargo/bin/cargo-xcode
  #         key: ${{ runner.OS }}-cargo-xcode-cache-${{env.cargo_xcode}}
  #     - uses: subosito/flutter-action@v2
  #       with:
  #         flutter-version: "3.3.10"
  #         channel: "stable"
  #     - uses: actions/checkout@v3
  #     - name: Clean & Get Flutter dependencies
  #       run: |
  #         flutter clean
  #         flutter pub get
  #     - name: Setup | Rust
  #       uses: ATiltedTree/setup-rust@v1
  #       with:
  #         rust-version: stable
  #         components: clippy
  #     - name: install cargo xcode
  #       if: steps.cargo-xcode.outputs.cache-hit != 'true'
  #       run: cargo install cargo-xcode
  #     - name: generate macos build from rust
  #       run: make macos-build
  #     - name: build macos
  #       run: flutter build macos --verbose

  # build-android:
  #   runs-on: macos-latest
  #   steps:
  #     - uses: actions/cache@v3
  #       id: cache-deps
  #       with:
  #         path: |
  #           /Users/runner/hostedtoolcache/flutter
  #           ~/.cargo/bin/
  #           ~/.cargo/registry/index/
  #           ~/.cargo/registry/cache/
  #           ~/.cargo/git/db/
  #         key: ${{ runner.OS }}-cargo-install-cache-v1}}
  #     - uses: actions/cache@v3
  #       id: cargo-ndk
  #       with:
  #         path: |
  #           ~/.cargo/bin/cargo-ndk
  #         key: ${{ runner.OS }}-cargo-ndk-cache-${{env.cargo_ndk}}
  #     - uses: subosito/flutter-action@v2
  #       with:
  #         flutter-version: "3.3.10"
  #         channel: "stable"
  #     - uses: actions/setup-java@v3
  #       with:
  #         distribution: 'zulu'
  #         java-version: "12.x"
  #     - uses: actions/checkout@v3
  #     - name: Clean & Get Flutter dependencies
  #       run: |
  #         flutter clean
  #         flutter pub get
  #     - name: Setup | Rust
  #       uses: ATiltedTree/setup-rust@v1
  #       with:
  #         rust-version: stable
  #         components: clippy
  #     - name: rustup target
  #       run: |
  #         rustup show
  #         rustup target add aarch64-linux-android
  #         rustup target add armv7-linux-androideabi
  #         rustup target add x86_64-linux-android
  #         rustup target add i686-linux-android
  #     - name: install cargo ndk
  #       if: steps.cargo-ndk.outputs.cache-hit != 'true'
  #       run: cargo install cargo-ndk
  #     - name: generate android build from rust
  #       run: make android-build
  #     - name: build android
  #       run: flutter build apk --split-per-abi

  build-ios:
    runs-on: macos-latest
    steps:
      - name: Setup xcode version
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: "14.0"
      - uses: actions/cache@v3
        id: cache-deps
        with:
          path: |
            /Users/runner/hostedtoolcache/flutter
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.OS }}-cargo-install-cache-v1}}
      - uses: actions/cache@v3
        id: cache-lipo
        with:
          path: |
            ~/.cargo/bin/cargo-lipo
          key: ${{ runner.OS }}-cargo-lipo-cache-${{env.cargo_lipo}}
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.3.10"
          channel: "stable"
      - uses: actions/checkout@v3
      - name: Install Task
        run: |
          sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b ~/.local/bin
          export PATH="$HOME/.local/bin:$PATH"
          task --version
      - name: List file is repo
        run: |
          ls -a
      - name: Clean & Get Flutter dependencies
        run: |
          flutter clean
          flutter pub get
      - name: Setup | Rust
        uses: ATiltedTree/setup-rust@v1
        with:
          rust-version: stable
          components: clippy
      - name: rustup target
        run: |
          rustup show
          rustup target add aarch64-apple-ios
          rustup target add x86_64-apple-ios
      - name: install cargo lipo
        if: steps.cache-lipo.outputs.cache-hit != 'true'
        run: task --version
      - name: generate ios build from rust
        run: task build_ios
      - name: build ios
        run: flutter build ios --no-codesign